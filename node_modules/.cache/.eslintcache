[{"/home/perry/Desktop/FullStack/ReactJS/src/index.js":"1","/home/perry/Desktop/FullStack/ReactJS/src/redux.js":"2","/home/perry/Desktop/FullStack/ReactJS/src/serviceWorker.js":"3","/home/perry/Desktop/FullStack/ReactJS/src/containers/App.js":"4","/home/perry/Desktop/FullStack/ReactJS/src/hoc/IntlProviderWrapper.js":"5","/home/perry/Desktop/FullStack/ReactJS/src/hoc/authentication.js":"6","/home/perry/Desktop/FullStack/ReactJS/src/routes/Home.js":"7","/home/perry/Desktop/FullStack/ReactJS/src/routes/Login.js":"8","/home/perry/Desktop/FullStack/ReactJS/src/routes/System.js":"9","/home/perry/Desktop/FullStack/ReactJS/src/containers/Header/Header.js":"10","/home/perry/Desktop/FullStack/ReactJS/src/components/CustomToast.js":"11","/home/perry/Desktop/FullStack/ReactJS/src/components/ConfirmModal.js":"12","/home/perry/Desktop/FullStack/ReactJS/src/store/reducers/rootReducer.js":"13","/home/perry/Desktop/FullStack/ReactJS/src/store/actions/actionTypes.js":"14","/home/perry/Desktop/FullStack/ReactJS/src/utils/index.js":"15","/home/perry/Desktop/FullStack/ReactJS/src/components/Navigator.js":"16","/home/perry/Desktop/FullStack/ReactJS/src/containers/Header/menuApp.js":"17","/home/perry/Desktop/FullStack/ReactJS/src/components/CustomScrollbars.js":"18","/home/perry/Desktop/FullStack/ReactJS/src/store/reducers/appReducer.js":"19","/home/perry/Desktop/FullStack/ReactJS/src/store/reducers/adminReducer.js":"20","/home/perry/Desktop/FullStack/ReactJS/src/store/reducers/userReducer.js":"21","/home/perry/Desktop/FullStack/ReactJS/src/services/adminService.js":"22","/home/perry/Desktop/FullStack/ReactJS/src/containers/System/ProductManage.js":"23","/home/perry/Desktop/FullStack/ReactJS/src/containers/System/UserManage.js":"24","/home/perry/Desktop/FullStack/ReactJS/src/containers/System/RegisterPackageGroupOrAcc.js":"25","/home/perry/Desktop/FullStack/ReactJS/src/store/actions/index.js":"26","/home/perry/Desktop/FullStack/ReactJS/src/utils/constant.js":"27","/home/perry/Desktop/FullStack/ReactJS/src/utils/CommonUtils.js":"28","/home/perry/Desktop/FullStack/ReactJS/src/utils/KeyCodeUtils.js":"29","/home/perry/Desktop/FullStack/ReactJS/src/utils/LanguageUtils.js":"30","/home/perry/Desktop/FullStack/ReactJS/src/utils/ToastUtil.js":"31","/home/perry/Desktop/FullStack/ReactJS/src/axios.js":"32","/home/perry/Desktop/FullStack/ReactJS/src/store/actions/appActions.js":"33","/home/perry/Desktop/FullStack/ReactJS/src/store/actions/userActions.js":"34","/home/perry/Desktop/FullStack/ReactJS/src/config.js":"35","/home/perry/Desktop/FullStack/ReactJS/src/containers/Auth/Login.js":"36","/home/perry/Desktop/FullStack/ReactJS/src/services/index.js":"37","/home/perry/Desktop/FullStack/ReactJS/src/services/userService.js":"38","/home/perry/Desktop/FullStack/ReactJS/src/containers/System/ModalUser.js":"39","/home/perry/Desktop/FullStack/ReactJS/src/utils/emitter.js":"40","/home/perry/Desktop/FullStack/ReactJS/src/containers/HomePage/HomePage.js":"41","/home/perry/Desktop/FullStack/ReactJS/src/containers/HomePage/HomeHeader.js":"42"},{"size":861,"mtime":1679998222714,"results":"43","hashOfConfig":"44"},{"size":1431,"mtime":1679642998781,"results":"45","hashOfConfig":"44"},{"size":4951,"mtime":1679642998781,"results":"46","hashOfConfig":"44"},{"size":2709,"mtime":1680666458448,"results":"47","hashOfConfig":"44"},{"size":1057,"mtime":1679642998781,"results":"48","hashOfConfig":"44"},{"size":767,"mtime":1679995520730,"results":"49","hashOfConfig":"44"},{"size":557,"mtime":1680666248776,"results":"50","hashOfConfig":"44"},{"size":5579,"mtime":1679642998781,"results":"51","hashOfConfig":"44"},{"size":1313,"mtime":1679642998781,"results":"52","hashOfConfig":"44"},{"size":1000,"mtime":1679998186379,"results":"53","hashOfConfig":"44"},{"size":2225,"mtime":1679642998773,"results":"54","hashOfConfig":"44"},{"size":3748,"mtime":1679642998773,"results":"55","hashOfConfig":"44"},{"size":774,"mtime":1679998198231,"results":"56","hashOfConfig":"44"},{"size":359,"mtime":1679998221390,"results":"57","hashOfConfig":"44"},{"size":245,"mtime":1680601147920,"results":"58","hashOfConfig":"44"},{"size":9080,"mtime":1679642998777,"results":"59","hashOfConfig":"44"},{"size":721,"mtime":1679642998777,"results":"60","hashOfConfig":"44"},{"size":3067,"mtime":1679642998773,"results":"61","hashOfConfig":"44"},{"size":811,"mtime":1680773125901,"results":"62","hashOfConfig":"44"},{"size":677,"mtime":1679998192887,"results":"63","hashOfConfig":"44"},{"size":670,"mtime":1679998195067,"results":"64","hashOfConfig":"44"},{"size":343,"mtime":1679642998781,"results":"65","hashOfConfig":"44"},{"size":541,"mtime":1679642998777,"results":"66","hashOfConfig":"44"},{"size":3884,"mtime":1680600904055,"results":"67","hashOfConfig":"44"},{"size":605,"mtime":1679642998777,"results":"68","hashOfConfig":"44"},{"size":61,"mtime":1679995807607,"results":"69","hashOfConfig":"44"},{"size":378,"mtime":1680668110255,"results":"70","hashOfConfig":"44"},{"size":149,"mtime":1679642998785,"results":"71","hashOfConfig":"44"},{"size":651,"mtime":1679642998785,"results":"72","hashOfConfig":"44"},{"size":927,"mtime":1679642998785,"results":"73","hashOfConfig":"44"},{"size":2910,"mtime":1679642998785,"results":"74","hashOfConfig":"44"},{"size":318,"mtime":1679992757724,"results":"75","hashOfConfig":"44"},{"size":308,"mtime":1679642998781,"results":"76","hashOfConfig":"44"},{"size":398,"mtime":1679998219602,"results":"77","hashOfConfig":"44"},{"size":397,"mtime":1679998225570,"results":"78","hashOfConfig":"44"},{"size":4441,"mtime":1679998651799,"results":"79","hashOfConfig":"44"},{"size":58,"mtime":1679988470779,"results":"80","hashOfConfig":"44"},{"size":589,"mtime":1680599826376,"results":"81","hashOfConfig":"44"},{"size":4422,"mtime":1680601021254,"results":"82","hashOfConfig":"44"},{"size":159,"mtime":1680600438497,"results":"83","hashOfConfig":"44"},{"size":482,"mtime":1680668671111,"results":"84","hashOfConfig":"44"},{"size":5389,"mtime":1680774513968,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"cyus1d",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"88"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"88"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"88"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"88"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/perry/Desktop/FullStack/ReactJS/src/index.js",[],["182","183"],"/home/perry/Desktop/FullStack/ReactJS/src/redux.js",[],"/home/perry/Desktop/FullStack/ReactJS/src/serviceWorker.js",[],"/home/perry/Desktop/FullStack/ReactJS/src/containers/App.js",[],"/home/perry/Desktop/FullStack/ReactJS/src/hoc/IntlProviderWrapper.js",[],"/home/perry/Desktop/FullStack/ReactJS/src/hoc/authentication.js",[],"/home/perry/Desktop/FullStack/ReactJS/src/routes/Home.js",[],"/home/perry/Desktop/FullStack/ReactJS/src/routes/Login.js",["184","185","186"],"/home/perry/Desktop/FullStack/ReactJS/src/routes/System.js",[],"/home/perry/Desktop/FullStack/ReactJS/src/containers/Header/Header.js",[],"/home/perry/Desktop/FullStack/ReactJS/src/components/CustomToast.js",[],"/home/perry/Desktop/FullStack/ReactJS/src/components/ConfirmModal.js",[],["187","188"],"/home/perry/Desktop/FullStack/ReactJS/src/store/reducers/rootReducer.js",["189","190"],"import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\n\nimport appReducer from \"./appReducer\";\nimport adminReducer from \"./adminReducer\";\nimport userReducer from \"./userReducer\";\n\nimport autoMergeLevel2 from \"redux-persist/lib/stateReconciler/autoMergeLevel2\";\nimport storage from \"redux-persist/lib/storage\";\nimport { persistReducer } from \"redux-persist\";\n\nconst persistCommonConfig = {\n  storage: storage,\n  stateReconciler: autoMergeLevel2,\n};\n\nconst userPersistConfig = {\n  ...persistCommonConfig,\n  key: \"user\",\n  whitelist: [\"isLoggedIn\", \"userInfo\"],\n};\n\nexport default (history) =>\n  combineReducers({\n    router: connectRouter(history),\n    user: persistReducer(userPersistConfig, userReducer),\n    app: appReducer,\n  });\n","/home/perry/Desktop/FullStack/ReactJS/src/store/actions/actionTypes.js",[],"/home/perry/Desktop/FullStack/ReactJS/src/utils/index.js",[],"/home/perry/Desktop/FullStack/ReactJS/src/components/Navigator.js",[],"/home/perry/Desktop/FullStack/ReactJS/src/containers/Header/menuApp.js",[],"/home/perry/Desktop/FullStack/ReactJS/src/components/CustomScrollbars.js",[],"/home/perry/Desktop/FullStack/ReactJS/src/store/reducers/appReducer.js",[],"/home/perry/Desktop/FullStack/ReactJS/src/store/reducers/adminReducer.js",[],"/home/perry/Desktop/FullStack/ReactJS/src/store/reducers/userReducer.js",[],"/home/perry/Desktop/FullStack/ReactJS/src/services/adminService.js",["191"],"import axios from '../axios';\nimport * as queryString from 'query-string';\n\nconst adminService = {\n\n    /**\n     * Đăng nhập hệ thống\n     * {\n     *  \"username\": \"string\",\n     *  \"password\": \"string\"\n     * }\n     */\n    login(loginBody) {\n        return axios.post(`/admin/login`, loginBody)\n    },\n\n};\n\nexport default adminService;",["192","193"],"/home/perry/Desktop/FullStack/ReactJS/src/containers/System/ProductManage.js",["194"],"import React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nclass ProductManage extends Component {\n\n    state = {\n\n    }\n\n    componentDidMount() {\n    }\n\n\n    render() {\n        return (\n            <div className=\"text-center\" >Manage products</div>\n        )\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductManage);\n","/home/perry/Desktop/FullStack/ReactJS/src/containers/System/UserManage.js",["195"],"import React, { Component } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { connect } from \"react-redux\";\nimport \"./UserManage.scss\";\nimport {\n  getAllUsers,\n  createNewUserService,\n  deleteUserService,\n} from \"../../services/userService\";\nimport ModalUser from \"./ModalUser\";\nimport { emitter } from \"../../utils/emitter\";\n\nclass UserManage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      arrUsers: [],\n      isOpenModalUser: false,\n    };\n  }\n\n  async componentDidMount() {\n    await this.getAllUsersFromReact();\n  }\n\n  handleAddNerUser = () => {\n    this.setState({\n      isOpenModalUser: true,\n    });\n  };\n\n  getAllUsersFromReact = async () => {\n    let response = await getAllUsers(\"ALL\");\n    if (response && response.errCode === 0) {\n      this.setState({\n        arrUsers: response.users,\n      });\n    }\n  };\n\n  toggleUserModel = () => {\n    this.setState({\n      isOpenModalUser: !this.state.isOpenModalUser,\n    });\n  };\n\n  createNewUser = async (data) => {\n    try {\n      let response = await createNewUserService(data);\n      if (response && response.errCode !== 0) {\n        alert(response.errMessage);\n      } else {\n        await this.getAllUsersFromReact();\n        this.setState({\n          isOpenModalUser: false,\n        });\n        emitter.emit(\"EVENT_CLEAR_MODAL_DATA\");\n      }\n      createNewUserService(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  /** Life cycle\n   * 1. Run component\n   * 2. Did mount (set state)\n   * 3. Render (re-render)\n   *\n   */\n\n  handleDeleteUser = async (user) => {\n    try {\n      let response = await deleteUserService(user.id);\n      if (response && response.errCode === 0) {\n        await this.getAllUsersFromReact();\n      } else {\n        alert(response.errMessage);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  render() {\n    let arrUsers = this.state.arrUsers;\n    return (\n      <div className=\"users-container\">\n        <ModalUser\n          isOpen={this.state.isOpenModalUser}\n          toggleFromParent={this.toggleUserModel}\n          createNewUser={this.createNewUser}\n        />\n        <div className=\"title text-center\">Manage user by PerryTheShark</div>\n        <div className=\"mx-1\" onClick={() => this.handleAddNerUser()}>\n          <button className=\"btn btn-primary px-3\">\n            <i className=\"fas fa-plus\"></i> Add new user\n          </button>\n        </div>\n        <div className=\"user-table\">\n          <table id=\"customers\">\n            <tbody>\n              <tr>\n                <th>Email</th>\n                <th>First name</th>\n                <th>Last name</th>\n                <th>Address</th>\n                <th>Actions</th>\n              </tr>\n\n              {arrUsers &&\n                arrUsers.map((item, index) => {\n                  return (\n                    <tr key={index}>\n                      <td>{item.email}</td>\n                      <td>{item.firstName}</td>\n                      <td>{item.lastName}</td>\n                      <td>{item.address}</td>\n                      <td>\n                        <button className=\"btn-edit\">\n                          <i className=\"fas fa-pencil-alt\"></i>\n                        </button>\n                        <button\n                          className=\"btn-delete\"\n                          onClick={() => this.handleDeleteUser(item)}\n                        >\n                          <i className=\"fas fa-trash\"></i>\n                        </button>\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserManage);\n","/home/perry/Desktop/FullStack/ReactJS/src/containers/System/RegisterPackageGroupOrAcc.js",["196","197"],"import React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nclass RegisterPackageGroupOrAcc extends Component {\n\n    constructor(props) {\n        super(props);\n\n    }\n\n\n\n    render() {\n        return (\n            <div className=\"text-center\">\n                register package group or account\n            </div>)\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterPackageGroupOrAcc);\n","/home/perry/Desktop/FullStack/ReactJS/src/store/actions/index.js",[],"/home/perry/Desktop/FullStack/ReactJS/src/utils/constant.js",[],"/home/perry/Desktop/FullStack/ReactJS/src/utils/CommonUtils.js",[],"/home/perry/Desktop/FullStack/ReactJS/src/utils/KeyCodeUtils.js",[],"/home/perry/Desktop/FullStack/ReactJS/src/utils/LanguageUtils.js",[],"/home/perry/Desktop/FullStack/ReactJS/src/utils/ToastUtil.js",[],"/home/perry/Desktop/FullStack/ReactJS/src/axios.js",["198","199"],"import axios from \"axios\";\nimport _ from \"lodash\";\nimport config from \"./config\";\n\nconst instance = axios.create({\n  baseURL: config.api.API_BASE_URL,\n  // withCredentials: true\n});\n\ninstance.interceptors.response.use((response) => {\n  const { data } = response;\n\n  return response.data;\n});\n\nexport default instance;\n","/home/perry/Desktop/FullStack/ReactJS/src/store/actions/appActions.js",[],"/home/perry/Desktop/FullStack/ReactJS/src/store/actions/userActions.js",[],"/home/perry/Desktop/FullStack/ReactJS/src/config.js",["200"],"export default {\n  api: {\n    API_BASE_URL: \"http://localhost:8080/\",\n    ROUTER_BASE_NAME: null,\n  },\n  app: {\n    /**\n     * The base URL for all locations. If your app is served from a sub-directory on your server, you'll want to set\n     * this to the sub-directory. A properly formatted basename should have a leading slash, but no trailing slash.\n     */\n    ROUTER_BASE_NAME: null,\n  },\n};\n","/home/perry/Desktop/FullStack/ReactJS/src/containers/Auth/Login.js",["201"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { push } from \"connected-react-router\";\nimport * as actions from \"../../store/actions\";\n\nimport \"./Login.scss\";\nimport { FormattedMessage } from \"react-intl\";\nimport { handleLoginApi } from \"../../services/userService\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      isShowPassword: false,\n      errMessage: \"\",\n    };\n  }\n\n  handleONchangeUsername = (event) => {\n    this.setState({\n      username: event.target.value,\n    });\n  };\n\n  handleONchangePassword = (event) => {\n    this.setState({\n      password: event.target.value,\n    });\n  };\n\n  handleLogin = async () => {\n    this.setState({\n      errMessage: \"\",\n    });\n\n    try {\n      let data = await handleLoginApi(this.state.username, this.state.password);\n      if (data && data.errCode !== 0) {\n        this.setState({\n          errMessage: data.message,\n        });\n      }\n      if (data && data.errCode === 0) {\n        this.props.userLoginSuccess(data.user);\n      }\n    } catch (error) {\n      if (error.response) {\n        if (error.response.data) {\n          this.setState({\n            errMessage: error.response.data.message,\n          });\n        }\n      }\n    }\n  };\n\n  handleShowHidePassword = () => {\n    this.setState({\n      isShowPassword: !this.state.isShowPassword,\n    });\n  };\n\n  render() {\n    //JSX\n    return (\n      <div className=\"login-background\">\n        <div className=\"login-container\">\n          <div className=\"login-content row\">\n            <div className=\"col-12 text-login\">Login </div>\n            <div className=\"col-12 form-group login-input\">\n              <label>Username:</label>\n              <input\n                placeholder=\"Enter your user's name\"\n                type=\"text\"\n                className=\"form-control\"\n                value={this.state.username}\n                onChange={(event) => this.handleONchangeUsername(event)}\n              ></input>\n            </div>\n            <div className=\"col-12 form-group login-input\">\n              <label>Password:</label>\n              <div className=\"custom-input-password\">\n                <input\n                  placeholder=\"Enter your user's password\"\n                  type={this.state.isShowPassword ? \"text\" : \"password\"}\n                  className=\"form-control\"\n                  value={this.state.password}\n                  onChange={(event) => this.handleONchangePassword(event)}\n                ></input>\n                <span\n                  onClick={() => {\n                    this.handleShowHidePassword();\n                  }}\n                >\n                  <i\n                    className={\n                      this.state.isShowPassword\n                        ? \"far fa-eye\"\n                        : \"far fa-eye-slash\"\n                    }\n                  ></i>\n                </span>\n              </div>\n            </div>\n            <div className=\"col-12\" style={{ color: \"red\" }}>\n              {this.state.errMessage}\n            </div>\n            <div className=\"col-12\">\n              <button\n                className=\"btn-login\"\n                onClick={() => {\n                  this.handleLogin();\n                }}\n              >\n                Login\n              </button>\n            </div>\n            <div className=\"col-12\">\n              <span className=\"forgot-password\">Forgot Your password?</span>\n            </div>\n            <div className=\"col-12 text-center mt-3\">\n              <span className=\"text-other-login\">Or login with</span>\n            </div>\n            <div className=\"col-12 social-login\">\n              <i className=\"fab fa-google-plus-g google\"></i>\n              <i className=\"fab fa-facebook-f facebook\"></i>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    language: state.app.language,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    navigate: (path) => dispatch(push(path)),\n    // adminLoginSuccess: (adminInfo) =>\n    //   dispatch(actions.adminLoginSuccess(adminInfo)),\n    // adminLoginFail: () => dispatch(actions.adminLoginFail()),\n    userLoginSuccess: (userInfor) =>\n      dispatch(actions.userLoginSuccess(userInfor)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","/home/perry/Desktop/FullStack/ReactJS/src/services/index.js",[],"/home/perry/Desktop/FullStack/ReactJS/src/services/userService.js",[],"/home/perry/Desktop/FullStack/ReactJS/src/containers/System/ModalUser.js",["202"],"import React, { Component } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { connect } from \"react-redux\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { emitter } from \"../../utils/emitter\";\n\nclass ModalUser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      address: \"\",\n    };\n\n    this.listenToEmitter();\n  }\n\n  listenToEmitter() {\n    emitter.on(\"EVENT_CLEAR_MODAL_DATA\", () => {\n      // reset state\n      this.setState({\n        email: \"\",\n        password: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        address: \"\",\n      });\n    });\n  }\n\n  componentDidMount() {}\n\n  toggle = () => {\n    this.props.toggleFromParent();\n  };\n\n  handleOnchangeInput = (event, id) => {\n    //not modify this so this is good code\n    let copyState = { ...this.state };\n    copyState[id] = event.target.value;\n    this.setState({\n      ...copyState,\n    });\n  };\n\n  checkValidateInput = () => {\n    let isValid = true;\n    let arrInput = [\"email\", \"password\", \"firstName\", \"lastName\", \"address\"];\n    for (let i = 0; i < arrInput.length; i++) {\n      if (!this.state[arrInput[i]]) {\n        isValid = false;\n        alert(\"Missing parameter: \" + arrInput[i]);\n        break;\n      }\n    }\n    return isValid;\n  };\n\n  handleAddNewUser = () => {\n    let isValid = this.checkValidateInput();\n    if (isValid === true) {\n      //call api create modal\n      this.props.createNewUser(this.state);\n    }\n  };\n\n  render() {\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n        toggle={() => {\n          this.toggle();\n        }}\n        size=\"lg\"\n        className={\"modal-uer-container\"}\n      >\n        <ModalHeader\n          toggle={() => {\n            this.toggle();\n          }}\n        >\n          Create a new user\n        </ModalHeader>\n        <ModalBody>\n          <div className=\"modal-user-body\">\n            <div className=\"input-container\">\n              <label>Email</label>\n              <input\n                type=\"text\"\n                onChange={(event) => {\n                  this.handleOnchangeInput(event, \"email\");\n                }}\n                value={this.state.email}\n              ></input>\n            </div>\n            <div className=\"input-container\">\n              <label>Password</label>\n              <input\n                type=\"password\"\n                onChange={(event) => {\n                  this.handleOnchangeInput(event, \"password\");\n                }}\n                value={this.state.password}\n              ></input>\n            </div>\n            <div className=\"input-container\">\n              <label>First name</label>\n              <input\n                type=\"text\"\n                onChange={(event) => {\n                  this.handleOnchangeInput(event, \"firstName\");\n                }}\n                value={this.state.firstName}\n              ></input>\n            </div>\n            <div className=\"input-container\">\n              <label>Last name</label>\n              <input\n                type=\"text\"\n                onChange={(event) => {\n                  this.handleOnchangeInput(event, \"lastName\");\n                }}\n                value={this.state.lastName}\n              ></input>\n            </div>\n            <div className=\"input-container max-width-input\">\n              <label>Address</label>\n              <input\n                type=\"text\"\n                onChange={(event) => {\n                  this.handleOnchangeInput(event, \"address\");\n                }}\n                value={this.state.address}\n              ></input>\n            </div>\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            color=\"primary\"\n            className=\"px-3\"\n            onClick={() => {\n              this.handleAddNewUser();\n            }}\n          >\n            Add new\n          </Button>{\" \"}\n          <Button\n            color=\"secondary\"\n            className=\"px-3\"\n            onClick={() => {\n              this.toggle();\n            }}\n          >\n            Close\n          </Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalUser);\n","/home/perry/Desktop/FullStack/ReactJS/src/utils/emitter.js",[],"/home/perry/Desktop/FullStack/ReactJS/src/containers/HomePage/HomePage.js",[],"/home/perry/Desktop/FullStack/ReactJS/src/containers/HomePage/HomeHeader.js",[],{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","severity":1,"message":"208","line":52,"column":17,"nodeType":"209","messageId":"210","endLine":52,"endColumn":25},{"ruleId":"207","severity":1,"message":"211","line":52,"column":27,"nodeType":"209","messageId":"210","endLine":52,"endColumn":35},{"ruleId":"207","severity":1,"message":"212","line":54,"column":36,"nodeType":"209","messageId":"210","endLine":54,"endColumn":50},{"ruleId":"203","replacedBy":"213"},{"ruleId":"205","replacedBy":"214"},{"ruleId":"207","severity":1,"message":"215","line":5,"column":8,"nodeType":"209","messageId":"210","endLine":5,"endColumn":20},{"ruleId":"216","severity":1,"message":"217","line":23,"column":1,"nodeType":"218","endLine":28,"endColumn":6},{"ruleId":"207","severity":1,"message":"219","line":2,"column":13,"nodeType":"209","messageId":"210","endLine":2,"endColumn":24},{"ruleId":"203","replacedBy":"220"},{"ruleId":"205","replacedBy":"221"},{"ruleId":"207","severity":1,"message":"222","line":2,"column":10,"nodeType":"209","messageId":"210","endLine":2,"endColumn":26},{"ruleId":"207","severity":1,"message":"222","line":2,"column":10,"nodeType":"209","messageId":"210","endLine":2,"endColumn":26},{"ruleId":"207","severity":1,"message":"222","line":2,"column":10,"nodeType":"209","messageId":"210","endLine":2,"endColumn":26},{"ruleId":"223","severity":1,"message":"224","line":6,"column":5,"nodeType":"225","messageId":"226","endLine":9,"endColumn":6},{"ruleId":"207","severity":1,"message":"227","line":2,"column":8,"nodeType":"209","messageId":"210","endLine":2,"endColumn":9},{"ruleId":"207","severity":1,"message":"228","line":11,"column":11,"nodeType":"209","messageId":"210","endLine":11,"endColumn":15},{"ruleId":"216","severity":1,"message":"229","line":1,"column":1,"nodeType":"218","endLine":13,"endColumn":3},{"ruleId":"207","severity":1,"message":"222","line":7,"column":10,"nodeType":"209","messageId":"210","endLine":7,"endColumn":26},{"ruleId":"207","severity":1,"message":"222","line":2,"column":10,"nodeType":"209","messageId":"210","endLine":2,"endColumn":26},"no-native-reassign",["230"],"no-negated-in-lhs",["231"],"no-unused-vars","'username' is assigned a value but never used.","Identifier","unusedVar","'password' is assigned a value but never used.","'adminLoginFail' is assigned a value but never used.",["230"],["231"],"'adminReducer' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'queryString' is defined but never used.",["230"],["231"],"'FormattedMessage' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'_' is defined but never used.","'data' is assigned a value but never used.","Assign object to a variable before exporting as module default","no-global-assign","no-unsafe-negation"]