{"ast":null,"code":"var _jsxFileName = \"/home/perry/Desktop/FullStack/ReactJS/src/containers/App.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { ConnectedRouter as Router } from \"connected-react-router\";\nimport { history } from \"../redux\";\nimport { ToastContainer } from \"react-toastify\";\nimport { userIsAuthenticated, userIsNotAuthenticated } from \"../hoc/authentication\";\nimport { path } from \"../utils\";\nimport Home from \"../routes/Home\"; // import Login from '../routes/Login';\n\nimport Login from \"./Auth/Login\";\nimport Header from \"./Header/Header\";\nimport System from \"../routes/System\";\nimport { CustomToastCloseButton } from \"../components/CustomToast\";\nimport ConfirmModal from \"../components/ConfirmModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handlePersistorState = () => {\n      const {\n        persistor\n      } = this.props;\n      let {\n        bootstrapped\n      } = persistor.getState();\n\n      if (bootstrapped) {\n        if (this.props.onBeforeLift) {\n          Promise.resolve(this.props.onBeforeLift()).then(() => this.setState({\n            bootstrapped: true\n          })).catch(() => this.setState({\n            bootstrapped: true\n          }));\n        } else {\n          this.setState({\n            bootstrapped: true\n          });\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.handlePersistorState();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        history: history,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-container\",\n          children: [/*#__PURE__*/_jsxDEV(ConfirmModal, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), this.props.isLoggedIn && /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"content-container\",\n            children: /*#__PURE__*/_jsxDEV(Switch, {\n              children: [/*#__PURE__*/_jsxDEV(Route, {\n                path: path.HOME,\n                exact: true,\n                component: Home\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: path.LOGIN,\n                component: userIsNotAuthenticated(Login)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: path.SYSTEM,\n                component: userIsAuthenticated(System)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n            className: \"toast-container\",\n            toastClassName: \"toast-item\",\n            bodyClassName: \"toast-item-body\",\n            autoClose: false,\n            hideProgressBar: true,\n            pauseOnHover: false,\n            pauseOnFocusLoss: true,\n            closeOnClick: false,\n            draggable: false,\n            closeButton: /*#__PURE__*/_jsxDEV(CustomToastCloseButton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    started: state.app.started,\n    isLoggedIn: state.admin.isLoggedIn\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/perry/Desktop/FullStack/ReactJS/src/containers/App.js"],"names":["React","Component","Fragment","connect","Route","Switch","ConnectedRouter","Router","history","ToastContainer","userIsAuthenticated","userIsNotAuthenticated","path","Home","Login","Header","System","CustomToastCloseButton","ConfirmModal","App","handlePersistorState","persistor","props","bootstrapped","getState","onBeforeLift","Promise","resolve","then","setState","catch","componentDidMount","render","isLoggedIn","HOME","LOGIN","SYSTEM","mapStateToProps","state","started","app","admin","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { ConnectedRouter as Router } from \"connected-react-router\";\nimport { history } from \"../redux\";\nimport { ToastContainer } from \"react-toastify\";\n\nimport {\n  userIsAuthenticated,\n  userIsNotAuthenticated,\n} from \"../hoc/authentication\";\n\nimport { path } from \"../utils\";\n\nimport Home from \"../routes/Home\";\n// import Login from '../routes/Login';\nimport Login from \"./Auth/Login\";\nimport Header from \"./Header/Header\";\nimport System from \"../routes/System\";\n\nimport { CustomToastCloseButton } from \"../components/CustomToast\";\nimport ConfirmModal from \"../components/ConfirmModal\";\n\nclass App extends Component {\n  handlePersistorState = () => {\n    const { persistor } = this.props;\n    let { bootstrapped } = persistor.getState();\n    if (bootstrapped) {\n      if (this.props.onBeforeLift) {\n        Promise.resolve(this.props.onBeforeLift())\n          .then(() => this.setState({ bootstrapped: true }))\n          .catch(() => this.setState({ bootstrapped: true }));\n      } else {\n        this.setState({ bootstrapped: true });\n      }\n    }\n  };\n\n  componentDidMount() {\n    this.handlePersistorState();\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <Router history={history}>\n          <div className=\"main-container\">\n            <ConfirmModal />\n            {this.props.isLoggedIn && <Header />}\n\n            <span className=\"content-container\">\n              <Switch>\n                <Route path={path.HOME} exact component={Home} />\n                <Route\n                  path={path.LOGIN}\n                  component={userIsNotAuthenticated(Login)}\n                />\n                <Route\n                  path={path.SYSTEM}\n                  component={userIsAuthenticated(System)}\n                />\n              </Switch>\n            </span>\n\n            <ToastContainer\n              className=\"toast-container\"\n              toastClassName=\"toast-item\"\n              bodyClassName=\"toast-item-body\"\n              autoClose={false}\n              hideProgressBar={true}\n              pauseOnHover={false}\n              pauseOnFocusLoss={true}\n              closeOnClick={false}\n              draggable={false}\n              closeButton={<CustomToastCloseButton />}\n            />\n          </div>\n        </Router>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    started: state.app.started,\n    isLoggedIn: state.admin.isLoggedIn,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}